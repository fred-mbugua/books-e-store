<%- include('../partials/header.ejs', { pageTitle: pageTitle }) %>

<main class="container py-5">
    <div class="card p-4 shadow-sm book-detail-card">
        <div class="row">
            
            <div class="col-md-4 mb-4 mb-md-0 d-flex justify-content-center">
                <img 
                    src="<%= book.image_url || '/images/default.jpg' %>" 
                    alt="<%= book.title %> Cover" 
                    class="img-fluid rounded shadow-lg book-cover-large"
                    style="max-height: 450px; object-fit: cover;"
                >
            </div>
            
            <div class="col-md-8">
                
                <h1 class="display-5 fw-bold text-primary"><%= book.title %></h1>
                <p class="lead text-muted border-bottom pb-3">
                    by <span class="fw-semibold"><%= book.author %></span>
                </p>
                
                <div class="d-flex align-items-baseline mb-4">
                    <span class="h2 text-success fw-bolder me-4">
                        Ksh <%= book.price %>
                    </span>
                    <% if (book.stock_quantity > 0) { %>
                        <span class="badge bg-success py-2 px-3 fs-6">
                            In Stock (<%= book.stock_quantity %>)
                        </span>
                    <% } else { %>
                        <span class="badge bg-danger py-2 px-3 fs-6">
                            Out of Stock
                        </span>
                    <% } %>
                </div>
                
                <% if (book.stock_quantity > 0) { %>
                    <form id="addToCartForm" class="d-flex align-items-center mb-4">
                        <input type="hidden" name="bookId" value="<%= book.book_id %>">
                        <label for="quantityInput" class="form-label me-3 mb-0 fw-semibold">Quantity:</label>
                        <input 
                            type="number" 
                            name="quantity" 
                            id="quantityInput" 
                            value="1" 
                            min="1" 
                            max="<%= book.stock_quantity %>" 
                            class="form-control me-3" 
                            style="width: 100px;"
                        >
                        <button type="submit" class="btn btn-primary btn-lg flex-grow-1" id="addToCartButton">
                            ðŸ›’ Add to Cart
                        </button>
                    </form>
                    <div id="alertMessage" class="mt-3" style="display: none;"></div>
                <% } else { %>
                    <button class="btn btn-secondary btn-lg w-100 mb-4" disabled>Out of Stock</button>
                <% } %>
                
                <hr>

                <div class="row g-3">
                    <div class="col-6">
                        <p class="mb-0 fw-semibold">Category:</p>
                        <span class="text-muted"><%= book.category_name || 'Uncategorized' %></span>
                    </div>
                    <div class="col-6">
                        <p class="mb-0 fw-semibold">ISBN:</p>
                        <span class="text-muted"><%= book.isbn %></span>
                    </div>
                </div>

            </div>
        </div>

        <hr class="my-5">

        <div class="row">
            <div class="col-12">
                <h3 class="h4 mb-3 text-primary">ðŸ“– Overview and Description</h3>
                <div class="card p-3 bg-light border-0">
                    <p><%= book.description %></p>
                </div>
            </div>
            
            </div>
    </div>
</main>

<script>
    // Key function: Updates the cart count displayed in the navigation bar.
    function updateCartCounter(count) {
        const cartCounter = document.querySelector('.cart-count');
        if (cartCounter) {
            cartCounter.textContent = count;
            cartCounter.style.display = count > 0 ? 'inline' : 'none';
        }
    }

    // Event Listener: Intercepts the form submission for 'Add to Cart'.
    document.getElementById('addToCartForm').addEventListener('submit', async (e) => {
        e.preventDefault(); // Stop the default page reload
        
        const form = e.target;
        const button = document.getElementById('addToCartButton');
        const alertDiv = document.getElementById('alertMessage');
        
        // Prepare data for the POST request
        const bookId = form.elements['bookId'].value;
        const quantity = parseInt(form.elements['quantity'].value, 10);
        
        if (quantity < 1) {
            alertDiv.className = 'alert alert-warning';
            alertDiv.textContent = 'Quantity must be at least 1.';
            alertDiv.style.display = 'block';
            return;
        }

        // Disable button and show loading state
        button.disabled = true;
        button.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Adding...';
        alertDiv.style.display = 'none';

        try {
            //  Send asynchronous POST request to the backend endpoint
            const response = await fetch('/shop/cart/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ bookId, quantity }),
            });

            //  Process the JSON response
            const data = await response.json();

            if (response.ok) {
                // Success: Update the counter and show success message
                updateCartCounter(data.cartCount);
                
                alertDiv.className = 'alert alert-success';
                alertDiv.textContent = data.message || `${quantity} item(s) added successfully!`;
            } else {
                // Error response (e.g., stock limit exceeded)
                alertDiv.className = 'alert alert-danger';
                alertDiv.textContent = data.message || 'Failed to add item to cart.';
            }
        } catch (error) {
            // Network or parsing error
            console.error('Fetch error:', error);
            alertDiv.className = 'alert alert-danger';
            alertDiv.textContent = 'Network error. Could not connect to the server.';
        } finally {
            // Re-enable button and display message
            button.disabled = false;
            button.innerHTML = 'ðŸ›’ Add to Cart';
            alertDiv.style.display = 'block';
        }
    });
</script>

<%- include('../partials/footer.ejs') %>